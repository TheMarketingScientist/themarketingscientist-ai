{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Articles\"\n",
        "author: \"The Marketing Scientist\"\n",
        "date: today\n",
        "format: html\n",
        "toc: true\n",
        "execute:\n",
        "  enabled: true\n",
        "jupyter: python3  # ✅ Ensures Python execution in Quarto\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# 📚 Articles  \n",
        "\n",
        "Here you’ll find insights on AI, data science, and marketing innovation.\n",
        "\n",
        "## 🔥 Featured Articles\n",
        "\n",
        "### 🚀 AI & Marketing Science\n",
        "- [Marketing Attribution Models: MMM, MTA, Full Funnel](#)\n",
        "- [High-Value Audience Modeling: A Precision Marketing Approach](#)\n",
        "- [Customer Journey Analytics: Funnel Analysis & CLV](#)\n",
        "\n",
        "### 🎯 Data-Driven Strategy\n",
        "- [How AI is Transforming Brand Measurement](#)\n",
        "- [Geo-Marketing and Localized AI Strategies](#)\n",
        "- [Interpretable AI for Business Decision-Making](#)\n",
        "\n",
        "## 📌 Latest Blog Posts (Generated Dynamically)\n",
        "\n",
        "\n",
        "#| echo: false  # ✅ Hides code output, only rendering results\n",
        "#| results: asis  # ✅ Ensures correct Markdown formatting\n",
        "\n",
        "import os\n",
        "\n",
        "# Define the path to articles\n",
        "articles_path = \"articles\"\n",
        "\n",
        "# Ensure the directory exists\n",
        "if not os.path.exists(articles_path):\n",
        "    print(\"⚠️ Warning: 'articles' directory not found.\")\n",
        "\n",
        "# Find all .qmd articles\n",
        "articles = [f for f in os.listdir(articles_path) if f.endswith(\".qmd\")]\n",
        "\n",
        "# Generate links dynamically\n",
        "if articles:\n",
        "    print(\"## 📝 Latest Articles\\n\")  # ✅ Correct Markdown header\n",
        "    for article in sorted(articles):  # ✅ Sort articles alphabetically\n",
        "        title = article.replace(\"-\", \" \").replace(\".qmd\", \"\").title()\n",
        "        print(f\"- [{title}](articles/{article.replace('.qmd', '.html')})\")\n",
        "else:\n",
        "    print(\"_No articles found._\")  # ✅ Ensures no broken output"
      ],
      "id": "27f1457a"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}